openapi: 3.0.3
info:
  title: HFT Order Service API
  version: "1.0.0"
  description: 
    $ref: "./docs/description.md"
servers:
  - url: https://api.hftorders.online
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    LimitParam:
      name: limit
      in: query
      description: Maximum number of records to return (≤ 1000)
      schema:
        type: integer
        minimum: 1
        maximum: 1000
    OffsetParam:
      name: offset
      in: query
      description: Offset from the first record
      schema:
        type: integer
        minimum: 0
    OrderDateFrom:
      name: order_date_from
      in: query
      description: Minimum order date/time (ISO‑8601)
      schema:
        type: string
        format: date-time
    OrderDateTo:
      name: order_date_to
      in: query
      description: Maximum order date/time (ISO‑8601)
      schema:
        type: string
        format: date-time
  schemas:
    Instrument:
      type: object
      properties:
        ticker:
          type: string
        mic:
          type: string
          description: Market MIC code
        name:
          type: string
        description:
          type: string
        lot_size:
          type: integer
        step:
          type: number
          description: Minimum price increment
        step_price:
          type: number
          description: Price increment value in currency units
        scale:
          type: integer
          description: Price precision (number of decimal places)
        is_active:
          type: boolean
      required: [ticker, mic, name, lot_size, step, step_price, scale, is_active]
    ExecutionOptions:
      type: object
      description: Execution custom settings
      properties:
        is_maker_in_first_stage:
          type: boolean
        first_stage_price_shift_in_steps:
          type: integer
        first_stage_attempt_count:
          type: integer
        second_stage_price_shift_in_steps:
          type: integer
        second_stage_attempt_count:
          type: integer
        time_limit_in_millis:
          type: integer
    AssetLeg:
      type: object
      required: [ticker, quantity, side]
      properties:
        ticker:
          type: string
        mic:
          type: string
        destination:
          type: string
          description: Execution venue (e.g. NYSE); default depends on instrument
        quantity:
          type: number
        side:
          type: string
          enum: [buy, sell]
    OrderRequest:
      type: object
      required: [assets, side, quantity, ticker]
      properties:
        client_order_id:
          type: string
          format: uuid
        comment:
          type: string
        assets:
          type: array
          description: Optional multi‑leg order specification (leave empty for single leg)
          items:
            $ref: '#/components/schemas/AssetLeg'
        ticker:
          type: string
          description: Primary instrument ticker (single‑leg orders)
        destination:
          type: string
          description: Execution venue (default NYSE for US stocks)
        mic:
          type: string
          description: MIC of the instrument group (default for US stocks)
        quantity:
          type: number
          description: Lot quantity (1 lot = 1 share for US equities)
        side:
          type: string
          enum: [buy, sell]
        time_in_force:
          type: string
          enum: [GTC, DAY]
          default: GTC
        mode:
          type: string
          enum: [optimal, best_price, best_time]
          default: optimal
        execution:
          $ref: '#/components/schemas/ExecutionOptions'
    OrderAccepted:
      type: object
      properties:
        client_order_id:
          type: string
          format: uuid
        trade_order_id:
          type: string
      required: [trade_order_id]
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: |
            01 – request format  
            02 – business error (e.g. insufficient funds)  
            03 – technical error
        error_description:
          type: string
      required: [error_code, error_description]
    TradeReport:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        stock_exchange_order_id:
          type: string
        quantity:
          type: number
        price:
          type: number
    OrderDetails:
      allOf:
        - $ref: '#/components/schemas/OrderRequest'
        - type: object
          required: [order_date, executed_quantity]
          properties:
            trade_order_id:
              type: string
            order_date:
              type: string
              format: date-time
            executed_quantity:
              type: number
            average_price:
              type: number
            trades:
              type: array
              items:
                $ref: '#/components/schemas/TradeReport'
paths:
  /auth-guide:                            # фиктивный путь, не виден как операция
    description:
      $ref: "./docs/ex2.md"   
  /api/instruments:
    get:
      summary: Get instrument list
      parameters:
        - name: search
          in: query
          description: Free‑text search in ticker or instrument name
          schema:
            type: string
        - name: ticker
          in: query
          schema:
            type: string
        - name: mic
          in: query
          schema:
            type: string
        - name: is_active
          in: query
          schema:
            type: boolean
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Instrument list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrument'
  /api/order:
    post:
      summary: Place a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAccepted'
        '400':
          description: Invalid order or business/technical error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/order/by-id/{id}:
    get:
      summary: Get order by internal ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '404':
          description: Order not found
  /api/order/by-client-id/{client_id}:
    get:
      summary: Get order by client‑provided ID
      parameters:
        - name: client_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '404':
          description: Order not found
  /api/orders:
    get:
      summary: List orders
      parameters:
        - $ref: '#/components/parameters/OrderDateFrom'
        - $ref: '#/components/parameters/OrderDateTo'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: Order list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
