openapi: 3.0.1
info:
  title: HFT Orders API
  version: 1.0.0
  description: |
    REST API for retrieving tradable instruments and placing orders on the HFT Orders platform.
servers:
  - url: https://api.hftorders.online

paths:
  /api/instruments:
    get:
      summary: Get instruments
      description: Returns a list of instruments that match the supplied filters.
      parameters:
        - name: search
          in: query
          description: Search string to match ticker or instrument name (case‑insensitive substring).
          schema:
            type: string
        - name: ticker
          in: query
          description: Exact instrument ticker symbol (e.g. `AAPL`).
          schema:
            type: string
        - name: mic
          in: query
          description: |
            Market Identifier Code (MIC) that specifies the trading venue.
            **Optional.** If omitted for U.S. equities, the server assumes the default venue for the ticker (e.g. `XNAS` for NASDAQ‑listed stocks or `XNYS` for NYSE‑listed stocks).
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of instruments to return (≤ 1000).
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: offset
          in: query
          description: Offset from the beginning of the result set (pagination).
          schema:
            type: integer
            minimum: 0
        - name: is_active
          in: query
          description: Filter by active status (`true` = active, `false` = inactive).
          schema:
            type: boolean
      responses:
        "200":
          description: A JSON array of instruments.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Instrument"

  /api/order:
    post:
      summary: Place a new order
      description: Creates a new order for the specified instrument. For U.S. equities the `mic` field is **not required**; the server infers the appropriate venue.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        "201":
          description: Order successfully placed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        "400":
          description: Invalid order parameters supplied.
        "401":
          description: Authentication credentials are missing or invalid.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # --------------------------------------------------------
    #   Instrument
    # --------------------------------------------------------
    Instrument:
      type: object
      properties:
        ticker:
          type: string
          description: Ticker symbol that uniquely identifies the security (e.g. `AAPL`).
          example: AAPL
        mic:
          type: string
          description: |
            Trading venue MIC. For U.S. equities this is typically `XNAS` or `XNYS`, but clients are **not** required to send it when placing orders.
          example: XNAS
        name:
          type: string
          description: Название компании или инструмента.
          example: Apple Inc. Common Stock
        description:
          type: string
          description: Описание компании или инструмента.
          example: Equity listed on NASDAQ
        lot_size:
          type: integer
          description: Минимальный размер позиции (lot size) в штуках.
          example: 1
        step:
          type: integer
          description: Quantity increment.
          example: 1
        step_price:
          type: number
          format: double
          description: Minimal price increment.
          example: 0.01
        scale:
          type: integer
          description: Number of decimal places allowed in price.
          example: 2
        is_active:
          type: boolean
          description: Доступен ли инструмент для торговли.
          example: true
      required:
        - ticker
        - mic
        - name
        - lot_size
        - step
        - step_price
        - scale
        - is_active

    # --------------------------------------------------------
    #   OrderRequest
    # --------------------------------------------------------
    OrderRequest:
      type: object
      properties:
        ticker:
          type: string
          description: Ticker symbol of the security to trade (e.g. `AAPL`).
          example: AAPL
        side:
          type: string
          enum: [buy, sell]
          example: buy
        quantity:
          type: integer
          description: Number of shares.
          example: 100
        price:
          type: number
          format: double
          example: 185.25
        comment:
          type: string
          description: Пользовательский комментарий к заявке.
          example: "Scalping strategy"
      required:
        - ticker
        - side
        - quantity

    # --------------------------------------------------------
    #   ExecutionReport (single fill)
    # --------------------------------------------------------
    ExecutionReport:
      type: object
      description: Individual execution (fill) detail.
      properties:
        trade_id:
          type: string
          description: Unique identifier of the execution (fill).
          example: "fill‑123"
        price:
          type: number
          format: double
          description: Execution price.
          example: 185.30
        quantity:
          type: integer
          description: Executed quantity in shares.
          example: 50
        timestamp:
          type: string
          format: date-time
          description: Time the execution occurred (ISO 8601).
          example: "2025-05-06T09:15:27Z"

    # --------------------------------------------------------
    #   OrderResponse
    # --------------------------------------------------------
    OrderResponse:
      type: object
      properties:
        order_id:
          type: string
          description: Internal identifier of the order in the HFT Orders system.
          example: "a1b2c3d4-e5f6-7890-abcd-ef0123456789"
        trade_order_id:
          type: string
          description: Номер заявки брокера (если присвоен).
          example: "BRK‑789654123"
        status:
          type: string
          enum: [new, accepted, partially_filled, filled, canceled, rejected]
          description: Current order status.
          example: accepted
        order_date:
          type: string
          format: date-time
          description: Дата/время размещения заявки (ISO 8601).
          example: "2025-05-06T09:14:03Z"
        executed_quantity:
          type: integer
          description: Исполненный объём по заявке в акциях.
          example: 75
        trades:
          type: array
          description: Execution reports (fills) related to this order.
          items:
            $ref: "#/components/schemas/ExecutionReport"
        comment:
          type: string
          description: Пользовательский комментарий к заявке.
          example: "Scalping strategy"
        message:
          type: string
          description: Service message/acknowledgement.
          example: "Order accepted for execution."
